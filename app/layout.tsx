import React from "react";
import type {Metadata} from "next";
import localFont from "next/font/local";
import "./globals.css";
import {AuthProvider} from "@/app/auth-provider";
import {ThemeProvider} from "@/components/theme-provider";
import {Navigation} from "@/components/client";
import {Inter} from "next/font/google"
import {NavigationMenuLink} from "@/components/ui/navigation-menu";
import {cn} from "@/lib/utils";
import {LoginLink, RegisterLink, LogoutLink} from "@kinde-oss/kinde-auth-nextjs/components";
import {authentication} from "@/lib/kinde-imports";
import {Button} from "@/components/ui/button";

const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});
const inter = Inter({subsets: ["latin"]})

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {
    const authenticated = await authentication()
    let NavTrigger: string
    if (!authenticated) {
        NavTrigger = "EMPLOYERS"
    } else {
        NavTrigger = "DASHBOARD"
    }
    return (
        <AuthProvider>
            <html lang="en">
            <body
                className={`antialiased font-medium ${inter.className} ${geistSans.variable} ${geistMono.variable}`}
            >
            <ThemeProvider
                attribute={"class"}
                defaultTheme={"system"}
                enableSystem={true}
                disableTransitionOnChange={true}
            >
                <Navigation
                    logout={
                        <LogoutLink postLogoutRedirectURL={"https://horizons-flax.vercel.app/"}><Button variant={"destructive"}>
                            LOGOUT
                        </Button></LogoutLink>
                    }
                    trigger={NavTrigger}
                >
                    {!authenticated ? (
                        <>
                            <LoginLink postLoginRedirectURL={"https://horizons-flax.vercel.app/dashboard"}>
                                <ListItem title="LOGIN">
                                    Login to your account
                                </ListItem>
                            </LoginLink>
                            <RegisterLink postLoginRedirectURL={"https://horizons-flax.vercel.app/dashboard"}>
                                <ListItem title="REGSITER">
                                    Register as a company/employer
                                </ListItem>
                            </RegisterLink>
                        </>
                        ):null}
                </Navigation>
                {children}
            </ThemeProvider>
            </body>
            </html>
        </AuthProvider>
    );
}

const ListItem = React.forwardRef<
    React.ElementRef<"a">,
    React.ComponentPropsWithoutRef<"a">
>(({className, title, children, ...props}, ref) => {
    return (
        <li>
            <NavigationMenuLink asChild>
                <a
                    ref={ref}
                    className={cn(
                        "block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground",
                        className
                    )}
                    {...props}
                >
                    <div className="text-sm font-medium leading-none">{title}</div>
                    <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">
                        {children}
                    </p>
                </a>
            </NavigationMenuLink>
        </li>
    )
})
ListItem.displayName = "ListItem"